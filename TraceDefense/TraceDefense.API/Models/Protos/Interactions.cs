// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TraceDefense.API/Models/Protos/Interactions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TraceDefense.API.Models.Protos {

  /// <summary>Holder for reflection information generated from TraceDefense.API/Models/Protos/Interactions.proto</summary>
  public static partial class InteractionsReflection {

    #region Descriptor
    /// <summary>File descriptor for TraceDefense.API/Models/Protos/Interactions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InteractionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFUcmFjZURlZmVuc2UuQVBJL01vZGVscy9Qcm90b3MvSW50ZXJhY3Rpb25z",
            "LnByb3RvEgZDb3JvbmEiZwoQUXVlcnlMaXN0UmVxdWVzdBIpCg9jb2Fyc2Vf",
            "bG9jYXRpb24YASABKAsyEC5Db3JvbmEuTG9jYXRpb24SKAoPbGFzdF9xdWVy",
            "eV90aW1lGAIgASgLMg8uQ29yb25hLlVUQ1RpbWUiOQoRUXVlcnlMaXN0UmVz",
            "cG9uc2USJAoJcXVlcnlpbmZvGAEgAygLMhEuQ29yb25hLlF1ZXJ5SW5mbyI8",
            "CgxRdWVyeVJlcXVlc3QSLAoRcmVxdWVzdGVkX3F1ZXJpZXMYASADKAsyES5D",
            "b3JvbmEuUXVlcnlJbmZvIl8KDlByb3hpbWl0eVF1ZXJ5EisKDWdlb19wcm94",
            "aW1pdHkYASADKAsyFC5Db3JvbmEuR2VvUHJveGltaXR5EiAKB2lkX2xpc3QY",
            "AiADKAsyDy5Db3JvbmEuSURNYXRjaCJHCglRdWVyeUluZm8SEAoIcXVlcnlf",
            "aWQYASABKAkSKAoPcXVlcnlfdGltZXN0YW1wGAIgASgLMg8uQ29yb25hLlVU",
            "Q1RpbWUiLAoHSURNYXRjaBIUCgx1c2VyX21lc3NhZ2UYASABKAkSCwoDaWRz",
            "GAIgAygJIo8BCgxHZW9Qcm94aW1pdHkSFAoMdXNlcl9tZXNzYWdlGAEgASgJ",
            "EicKCWxvY2F0aW9ucxgCIAMoCzIULkNvcm9uYS5Mb2NhdGlvblRpbWUSHwoX",
            "cHJveGltaXR5X3JhZGl1c19tZXRlcnMYAyABKAISHwoXZHVyYXRpb25fdG9s",
            "ZXJhbmNlX3NlY3MYBCABKAUiUQoMTG9jYXRpb25UaW1lEiIKCGxvY2F0aW9u",
            "GAEgASgLMhAuQ29yb25hLkxvY2F0aW9uEh0KBHRpbWUYAiABKAsyDy5Db3Jv",
            "bmEuVVRDVGltZSJ2CgdVVENUaW1lEgwKBHllYXIYASABKAUSDQoFbW9udGgY",
            "AiABKAUSCwoDZGF5GAMgASgFEgwKBGhvdXIYBCABKAUSDgoGbWludXRlGAUg",
            "ASgFEg4KBnNlY29uZBgJIAEoBRITCgttaWxsaXNlY29uZBgKIAEoBSJHCghM",
            "b2NhdGlvbhIRCglsYXR0aXR1ZGUYASABKAISEQoJbG9uZ2l0dWRlGAIgASgC",
            "EhUKDXJhZGl1c19tZXRlcnMYAyABKAJCIaoCHlRyYWNlRGVmZW5zZS5BUEku",
            "TW9kZWxzLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.QueryListRequest), global::TraceDefense.API.Models.Protos.QueryListRequest.Parser, new[]{ "CoarseLocation", "LastQueryTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.QueryListResponse), global::TraceDefense.API.Models.Protos.QueryListResponse.Parser, new[]{ "Queryinfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.QueryRequest), global::TraceDefense.API.Models.Protos.QueryRequest.Parser, new[]{ "RequestedQueries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.ProximityQuery), global::TraceDefense.API.Models.Protos.ProximityQuery.Parser, new[]{ "GeoProximity", "IdList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.QueryInfo), global::TraceDefense.API.Models.Protos.QueryInfo.Parser, new[]{ "QueryId", "QueryTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.IDMatch), global::TraceDefense.API.Models.Protos.IDMatch.Parser, new[]{ "UserMessage", "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.GeoProximity), global::TraceDefense.API.Models.Protos.GeoProximity.Parser, new[]{ "UserMessage", "Locations", "ProximityRadiusMeters", "DurationToleranceSecs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.LocationTime), global::TraceDefense.API.Models.Protos.LocationTime.Parser, new[]{ "Location", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.UTCTime), global::TraceDefense.API.Models.Protos.UTCTime.Parser, new[]{ "Year", "Month", "Day", "Hour", "Minute", "Second", "Millisecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.API.Models.Protos.Location), global::TraceDefense.API.Models.Protos.Location.Parser, new[]{ "Lattitude", "Longitude", "RadiusMeters" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Phone -> Server get_queries(coarse_location, last_query_time)
  /// </summary>
  public sealed partial class QueryListRequest : pb::IMessage<QueryListRequest> {
    private static readonly pb::MessageParser<QueryListRequest> _parser = new pb::MessageParser<QueryListRequest>(() => new QueryListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryListRequest(QueryListRequest other) : this() {
      coarseLocation_ = other.coarseLocation_ != null ? other.coarseLocation_.Clone() : null;
      lastQueryTime_ = other.lastQueryTime_ != null ? other.lastQueryTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryListRequest Clone() {
      return new QueryListRequest(this);
    }

    /// <summary>Field number for the "coarse_location" field.</summary>
    public const int CoarseLocationFieldNumber = 1;
    private global::TraceDefense.API.Models.Protos.Location coarseLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.API.Models.Protos.Location CoarseLocation {
      get { return coarseLocation_; }
      set {
        coarseLocation_ = value;
      }
    }

    /// <summary>Field number for the "last_query_time" field.</summary>
    public const int LastQueryTimeFieldNumber = 2;
    private global::TraceDefense.API.Models.Protos.UTCTime lastQueryTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.API.Models.Protos.UTCTime LastQueryTime {
      get { return lastQueryTime_; }
      set {
        lastQueryTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CoarseLocation, other.CoarseLocation)) return false;
      if (!object.Equals(LastQueryTime, other.LastQueryTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (coarseLocation_ != null) hash ^= CoarseLocation.GetHashCode();
      if (lastQueryTime_ != null) hash ^= LastQueryTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (coarseLocation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CoarseLocation);
      }
      if (lastQueryTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastQueryTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (coarseLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoarseLocation);
      }
      if (lastQueryTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastQueryTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryListRequest other) {
      if (other == null) {
        return;
      }
      if (other.coarseLocation_ != null) {
        if (coarseLocation_ == null) {
          CoarseLocation = new global::TraceDefense.API.Models.Protos.Location();
        }
        CoarseLocation.MergeFrom(other.CoarseLocation);
      }
      if (other.lastQueryTime_ != null) {
        if (lastQueryTime_ == null) {
          LastQueryTime = new global::TraceDefense.API.Models.Protos.UTCTime();
        }
        LastQueryTime.MergeFrom(other.LastQueryTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (coarseLocation_ == null) {
              CoarseLocation = new global::TraceDefense.API.Models.Protos.Location();
            }
            input.ReadMessage(CoarseLocation);
            break;
          }
          case 18: {
            if (lastQueryTime_ == null) {
              LastQueryTime = new global::TraceDefense.API.Models.Protos.UTCTime();
            }
            input.ReadMessage(LastQueryTime);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Server -> Phone list of queries for coarse_location
  /// </summary>
  public sealed partial class QueryListResponse : pb::IMessage<QueryListResponse> {
    private static readonly pb::MessageParser<QueryListResponse> _parser = new pb::MessageParser<QueryListResponse>(() => new QueryListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryListResponse(QueryListResponse other) : this() {
      queryinfo_ = other.queryinfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryListResponse Clone() {
      return new QueryListResponse(this);
    }

    /// <summary>Field number for the "queryinfo" field.</summary>
    public const int QueryinfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TraceDefense.API.Models.Protos.QueryInfo> _repeated_queryinfo_codec
        = pb::FieldCodec.ForMessage(10, global::TraceDefense.API.Models.Protos.QueryInfo.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.API.Models.Protos.QueryInfo> queryinfo_ = new pbc::RepeatedField<global::TraceDefense.API.Models.Protos.QueryInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.API.Models.Protos.QueryInfo> Queryinfo {
      get { return queryinfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!queryinfo_.Equals(other.queryinfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= queryinfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      queryinfo_.WriteTo(output, _repeated_queryinfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += queryinfo_.CalculateSize(_repeated_queryinfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryListResponse other) {
      if (other == null) {
        return;
      }
      queryinfo_.Add(other.queryinfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            queryinfo_.AddEntriesFrom(input, _repeated_queryinfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Phone -> Server download_queries(new_query_ids)
  /// Request to download the details of given query ids
  /// </summary>
  public sealed partial class QueryRequest : pb::IMessage<QueryRequest> {
    private static readonly pb::MessageParser<QueryRequest> _parser = new pb::MessageParser<QueryRequest>(() => new QueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRequest(QueryRequest other) : this() {
      requestedQueries_ = other.requestedQueries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRequest Clone() {
      return new QueryRequest(this);
    }

    /// <summary>Field number for the "requested_queries" field.</summary>
    public const int RequestedQueriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TraceDefense.API.Models.Protos.QueryInfo> _repeated_requestedQueries_codec
        = pb::FieldCodec.ForMessage(10, global::TraceDefense.API.Models.Protos.QueryInfo.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.API.Models.Protos.QueryInfo> requestedQueries_ = new pbc::RepeatedField<global::TraceDefense.API.Models.Protos.QueryInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.API.Models.Protos.QueryInfo> RequestedQueries {
      get { return requestedQueries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!requestedQueries_.Equals(other.requestedQueries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= requestedQueries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      requestedQueries_.WriteTo(output, _repeated_requestedQueries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += requestedQueries_.CalculateSize(_repeated_requestedQueries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRequest other) {
      if (other == null) {
        return;
      }
      requestedQueries_.Add(other.requestedQueries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            requestedQueries_.AddEntriesFrom(input, _repeated_requestedQueries_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Server -> Phone (list of queries corresponding to touch points where
  /// infection can occour)
  /// </summary>
  public sealed partial class ProximityQuery : pb::IMessage<ProximityQuery> {
    private static readonly pb::MessageParser<ProximityQuery> _parser = new pb::MessageParser<ProximityQuery>(() => new ProximityQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProximityQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProximityQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProximityQuery(ProximityQuery other) : this() {
      geoProximity_ = other.geoProximity_.Clone();
      idList_ = other.idList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProximityQuery Clone() {
      return new ProximityQuery(this);
    }

    /// <summary>Field number for the "geo_proximity" field.</summary>
    public const int GeoProximityFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TraceDefense.API.Models.Protos.GeoProximity> _repeated_geoProximity_codec
        = pb::FieldCodec.ForMessage(10, global::TraceDefense.API.Models.Protos.GeoProximity.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.API.Models.Protos.GeoProximity> geoProximity_ = new pbc::RepeatedField<global::TraceDefense.API.Models.Protos.GeoProximity>();
    /// <summary>
    /// at or around &lt;place[]> for more than &lt;duration> around &lt;time[]>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.API.Models.Protos.GeoProximity> GeoProximity {
      get { return geoProximity_; }
    }

    /// <summary>Field number for the "id_list" field.</summary>
    public const int IdListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TraceDefense.API.Models.Protos.IDMatch> _repeated_idList_codec
        = pb::FieldCodec.ForMessage(18, global::TraceDefense.API.Models.Protos.IDMatch.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.API.Models.Protos.IDMatch> idList_ = new pbc::RepeatedField<global::TraceDefense.API.Models.Protos.IDMatch>();
    /// <summary>
    /// near &lt;person>; where person is identified by some kind of blue tooth beacon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.API.Models.Protos.IDMatch> IdList {
      get { return idList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProximityQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProximityQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!geoProximity_.Equals(other.geoProximity_)) return false;
      if(!idList_.Equals(other.idList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= geoProximity_.GetHashCode();
      hash ^= idList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      geoProximity_.WriteTo(output, _repeated_geoProximity_codec);
      idList_.WriteTo(output, _repeated_idList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += geoProximity_.CalculateSize(_repeated_geoProximity_codec);
      size += idList_.CalculateSize(_repeated_idList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProximityQuery other) {
      if (other == null) {
        return;
      }
      geoProximity_.Add(other.geoProximity_);
      idList_.Add(other.idList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            geoProximity_.AddEntriesFrom(input, _repeated_geoProximity_codec);
            break;
          }
          case 18: {
            idList_.AddEntriesFrom(input, _repeated_idList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Metadata about each query
  /// </summary>
  public sealed partial class QueryInfo : pb::IMessage<QueryInfo> {
    private static readonly pb::MessageParser<QueryInfo> _parser = new pb::MessageParser<QueryInfo>(() => new QueryInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryInfo(QueryInfo other) : this() {
      queryId_ = other.queryId_;
      queryTimestamp_ = other.queryTimestamp_ != null ? other.queryTimestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryInfo Clone() {
      return new QueryInfo(this);
    }

    /// <summary>Field number for the "query_id" field.</summary>
    public const int QueryIdFieldNumber = 1;
    private string queryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QueryId {
      get { return queryId_; }
      set {
        queryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query_timestamp" field.</summary>
    public const int QueryTimestampFieldNumber = 2;
    private global::TraceDefense.API.Models.Protos.UTCTime queryTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.API.Models.Protos.UTCTime QueryTimestamp {
      get { return queryTimestamp_; }
      set {
        queryTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueryId != other.QueryId) return false;
      if (!object.Equals(QueryTimestamp, other.QueryTimestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QueryId.Length != 0) hash ^= QueryId.GetHashCode();
      if (queryTimestamp_ != null) hash ^= QueryTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QueryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(QueryId);
      }
      if (queryTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(QueryTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QueryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueryId);
      }
      if (queryTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryInfo other) {
      if (other == null) {
        return;
      }
      if (other.QueryId.Length != 0) {
        QueryId = other.QueryId;
      }
      if (other.queryTimestamp_ != null) {
        if (queryTimestamp_ == null) {
          QueryTimestamp = new global::TraceDefense.API.Models.Protos.UTCTime();
        }
        QueryTimestamp.MergeFrom(other.QueryTimestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            QueryId = input.ReadString();
            break;
          }
          case 18: {
            if (queryTimestamp_ == null) {
              QueryTimestamp = new global::TraceDefense.API.Models.Protos.UTCTime();
            }
            input.ReadMessage(QueryTimestamp);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// List of blue tooth beacons
  /// </summary>
  public sealed partial class IDMatch : pb::IMessage<IDMatch> {
    private static readonly pb::MessageParser<IDMatch> _parser = new pb::MessageParser<IDMatch>(() => new IDMatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IDMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDMatch(IDMatch other) : this() {
      userMessage_ = other.userMessage_;
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDMatch Clone() {
      return new IDMatch(this);
    }

    /// <summary>Field number for the "user_message" field.</summary>
    public const int UserMessageFieldNumber = 1;
    private string userMessage_ = "";
    /// <summary>
    /// Message to be displayed to the user if there is a match
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserMessage {
      get { return userMessage_; }
      set {
        userMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Anonymized blue tooth beacons (or other exact match identifiers if
    /// available)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IDMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IDMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserMessage != other.UserMessage) return false;
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserMessage.Length != 0) hash ^= UserMessage.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserMessage);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserMessage);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IDMatch other) {
      if (other == null) {
        return;
      }
      if (other.UserMessage.Length != 0) {
        UserMessage = other.UserMessage;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserMessage = input.ReadString();
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// List of locations
  /// </summary>
  public sealed partial class GeoProximity : pb::IMessage<GeoProximity> {
    private static readonly pb::MessageParser<GeoProximity> _parser = new pb::MessageParser<GeoProximity>(() => new GeoProximity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeoProximity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoProximity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoProximity(GeoProximity other) : this() {
      userMessage_ = other.userMessage_;
      locations_ = other.locations_.Clone();
      proximityRadiusMeters_ = other.proximityRadiusMeters_;
      durationToleranceSecs_ = other.durationToleranceSecs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoProximity Clone() {
      return new GeoProximity(this);
    }

    /// <summary>Field number for the "user_message" field.</summary>
    public const int UserMessageFieldNumber = 1;
    private string userMessage_ = "";
    /// <summary>
    /// Message to be displayed to the user if there is a match
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserMessage {
      get { return userMessage_; }
      set {
        userMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TraceDefense.API.Models.Protos.LocationTime> _repeated_locations_codec
        = pb::FieldCodec.ForMessage(18, global::TraceDefense.API.Models.Protos.LocationTime.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.API.Models.Protos.LocationTime> locations_ = new pbc::RepeatedField<global::TraceDefense.API.Models.Protos.LocationTime>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.API.Models.Protos.LocationTime> Locations {
      get { return locations_; }
    }

    /// <summary>Field number for the "proximity_radius_meters" field.</summary>
    public const int ProximityRadiusMetersFieldNumber = 3;
    private float proximityRadiusMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ProximityRadiusMeters {
      get { return proximityRadiusMeters_; }
      set {
        proximityRadiusMeters_ = value;
      }
    }

    /// <summary>Field number for the "duration_tolerance_secs" field.</summary>
    public const int DurationToleranceSecsFieldNumber = 4;
    private int durationToleranceSecs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DurationToleranceSecs {
      get { return durationToleranceSecs_; }
      set {
        durationToleranceSecs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeoProximity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeoProximity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserMessage != other.UserMessage) return false;
      if(!locations_.Equals(other.locations_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ProximityRadiusMeters, other.ProximityRadiusMeters)) return false;
      if (DurationToleranceSecs != other.DurationToleranceSecs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserMessage.Length != 0) hash ^= UserMessage.GetHashCode();
      hash ^= locations_.GetHashCode();
      if (ProximityRadiusMeters != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ProximityRadiusMeters);
      if (DurationToleranceSecs != 0) hash ^= DurationToleranceSecs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserMessage);
      }
      locations_.WriteTo(output, _repeated_locations_codec);
      if (ProximityRadiusMeters != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ProximityRadiusMeters);
      }
      if (DurationToleranceSecs != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DurationToleranceSecs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserMessage);
      }
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (ProximityRadiusMeters != 0F) {
        size += 1 + 4;
      }
      if (DurationToleranceSecs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DurationToleranceSecs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeoProximity other) {
      if (other == null) {
        return;
      }
      if (other.UserMessage.Length != 0) {
        UserMessage = other.UserMessage;
      }
      locations_.Add(other.locations_);
      if (other.ProximityRadiusMeters != 0F) {
        ProximityRadiusMeters = other.ProximityRadiusMeters;
      }
      if (other.DurationToleranceSecs != 0) {
        DurationToleranceSecs = other.DurationToleranceSecs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserMessage = input.ReadString();
            break;
          }
          case 18: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
          case 29: {
            ProximityRadiusMeters = input.ReadFloat();
            break;
          }
          case 32: {
            DurationToleranceSecs = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LocationTime : pb::IMessage<LocationTime> {
    private static readonly pb::MessageParser<LocationTime> _parser = new pb::MessageParser<LocationTime>(() => new LocationTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationTime(LocationTime other) : this() {
      location_ = other.location_ != null ? other.location_.Clone() : null;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationTime Clone() {
      return new LocationTime(this);
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 1;
    private global::TraceDefense.API.Models.Protos.Location location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.API.Models.Protos.Location Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private global::TraceDefense.API.Models.Protos.UTCTime time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.API.Models.Protos.UTCTime Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (location_ != null) hash ^= Location.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (location_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Location);
      }
      if (time_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationTime other) {
      if (other == null) {
        return;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::TraceDefense.API.Models.Protos.Location();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::TraceDefense.API.Models.Protos.UTCTime();
        }
        Time.MergeFrom(other.Time);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (location_ == null) {
              Location = new global::TraceDefense.API.Models.Protos.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 18: {
            if (time_ == null) {
              Time = new global::TraceDefense.API.Models.Protos.UTCTime();
            }
            input.ReadMessage(Time);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UTCTime : pb::IMessage<UTCTime> {
    private static readonly pb::MessageParser<UTCTime> _parser = new pb::MessageParser<UTCTime>(() => new UTCTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UTCTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UTCTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UTCTime(UTCTime other) : this() {
      year_ = other.year_;
      month_ = other.month_;
      day_ = other.day_;
      hour_ = other.hour_;
      minute_ = other.minute_;
      second_ = other.second_;
      millisecond_ = other.millisecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UTCTime Clone() {
      return new UTCTime(this);
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 1;
    private int year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Year {
      get { return year_; }
      set {
        year_ = value;
      }
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 2;
    private int month_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Month {
      get { return month_; }
      set {
        month_ = value;
      }
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 3;
    private int day_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Day {
      get { return day_; }
      set {
        day_ = value;
      }
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 4;
    private int hour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hour {
      get { return hour_; }
      set {
        hour_ = value;
      }
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 5;
    private int minute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Minute {
      get { return minute_; }
      set {
        minute_ = value;
      }
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 9;
    private int second_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Second {
      get { return second_; }
      set {
        second_ = value;
      }
    }

    /// <summary>Field number for the "millisecond" field.</summary>
    public const int MillisecondFieldNumber = 10;
    private int millisecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Millisecond {
      get { return millisecond_; }
      set {
        millisecond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UTCTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UTCTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Year != other.Year) return false;
      if (Month != other.Month) return false;
      if (Day != other.Day) return false;
      if (Hour != other.Hour) return false;
      if (Minute != other.Minute) return false;
      if (Second != other.Second) return false;
      if (Millisecond != other.Millisecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Year != 0) hash ^= Year.GetHashCode();
      if (Month != 0) hash ^= Month.GetHashCode();
      if (Day != 0) hash ^= Day.GetHashCode();
      if (Hour != 0) hash ^= Hour.GetHashCode();
      if (Minute != 0) hash ^= Minute.GetHashCode();
      if (Second != 0) hash ^= Second.GetHashCode();
      if (Millisecond != 0) hash ^= Millisecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Year != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Year);
      }
      if (Month != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Month);
      }
      if (Day != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (Hour != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Hour);
      }
      if (Minute != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Minute);
      }
      if (Second != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Second);
      }
      if (Millisecond != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Millisecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Year != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
      }
      if (Month != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Month);
      }
      if (Day != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
      }
      if (Hour != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hour);
      }
      if (Minute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
      }
      if (Second != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Second);
      }
      if (Millisecond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Millisecond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UTCTime other) {
      if (other == null) {
        return;
      }
      if (other.Year != 0) {
        Year = other.Year;
      }
      if (other.Month != 0) {
        Month = other.Month;
      }
      if (other.Day != 0) {
        Day = other.Day;
      }
      if (other.Hour != 0) {
        Hour = other.Hour;
      }
      if (other.Minute != 0) {
        Minute = other.Minute;
      }
      if (other.Second != 0) {
        Second = other.Second;
      }
      if (other.Millisecond != 0) {
        Millisecond = other.Millisecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Year = input.ReadInt32();
            break;
          }
          case 16: {
            Month = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 32: {
            Hour = input.ReadInt32();
            break;
          }
          case 40: {
            Minute = input.ReadInt32();
            break;
          }
          case 72: {
            Second = input.ReadInt32();
            break;
          }
          case 80: {
            Millisecond = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Location : pb::IMessage<Location> {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.API.Models.Protos.InteractionsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location(Location other) : this() {
      lattitude_ = other.lattitude_;
      longitude_ = other.longitude_;
      radiusMeters_ = other.radiusMeters_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "lattitude" field.</summary>
    public const int LattitudeFieldNumber = 1;
    private float lattitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Lattitude {
      get { return lattitude_; }
      set {
        lattitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private float longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "radius_meters" field.</summary>
    public const int RadiusMetersFieldNumber = 3;
    private float radiusMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RadiusMeters {
      get { return radiusMeters_; }
      set {
        radiusMeters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Lattitude, other.Lattitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RadiusMeters, other.RadiusMeters)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lattitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Lattitude);
      if (Longitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
      if (RadiusMeters != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RadiusMeters);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lattitude != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Lattitude);
      }
      if (Longitude != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Longitude);
      }
      if (RadiusMeters != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(RadiusMeters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lattitude != 0F) {
        size += 1 + 4;
      }
      if (Longitude != 0F) {
        size += 1 + 4;
      }
      if (RadiusMeters != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.Lattitude != 0F) {
        Lattitude = other.Lattitude;
      }
      if (other.Longitude != 0F) {
        Longitude = other.Longitude;
      }
      if (other.RadiusMeters != 0F) {
        RadiusMeters = other.RadiusMeters;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Lattitude = input.ReadFloat();
            break;
          }
          case 21: {
            Longitude = input.ReadFloat();
            break;
          }
          case 29: {
            RadiusMeters = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
