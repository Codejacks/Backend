// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TraceDefense.Entities/Protos/Interactions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TraceDefense.Entities.Protos {

  /// <summary>Holder for reflection information generated from TraceDefense.Entities/Protos/Interactions.proto</summary>
  public static partial class InteractionsReflection {

    #region Descriptor
    /// <summary>File descriptor for TraceDefense.Entities/Protos/Interactions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InteractionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9UcmFjZURlZmVuc2UuRW50aXRpZXMvUHJvdG9zL0ludGVyYWN0aW9ucy5w",
            "cm90bxIGQ29yb25hIl4KEk1lc3NhZ2VTaXplUmVxdWVzdBIeCgZyZWdpb24Y",
            "ASACKAsyDi5Db3JvbmEuUmVnaW9uEigKD2xhc3RfcXVlcnlfdGltZRgCIAIo",
            "CzIPLkNvcm9uYS5VVENUaW1lIjUKE01lc3NhZ2VTaXplUmVzcG9uc2USHgoW",
            "c2l6ZV9vZl9xdWVyeV9yZXNwb25zZRgBIAIoAyJeChJNZXNzYWdlTGlzdFJl",
            "cXVlc3QSHgoGcmVnaW9uGAEgAigLMg4uQ29yb25hLlJlZ2lvbhIoCg9sYXN0",
            "X3F1ZXJ5X3RpbWUYAiACKAsyDy5Db3JvbmEuVVRDVGltZSJAChNNZXNzYWdl",
            "TGlzdFJlc3BvbnNlEikKDG1lc3NhZ2VfaW5mbxgBIAMoCzITLkNvcm9uYS5N",
            "ZXNzYWdlSW5mbyJACg5NZXNzYWdlUmVxdWVzdBIuChFyZXF1ZXN0ZWRfcXVl",
            "cmllcxgBIAMoCzITLkNvcm9uYS5NZXNzYWdlSW5mbyKNAQoMTWF0Y2hNZXNz",
            "YWdlEiUKFm1hdGNoX3Byb3RvY29sX3ZlcnNpb24YASACKAk6BTEuMC4wEiUK",
            "CmFyZWFfbWF0Y2gYAiADKAsyES5Db3JvbmEuQXJlYU1hdGNoEi8KD2JsdWV0",
            "b290aF9tYXRjaBgDIAMoCzIWLkNvcm9uYS5CbHVldG9vdGhNYXRjaCI5Cg9N",
            "ZXNzYWdlUmVzcG9uc2USJgoIbWVzc2FnZXMYASADKAsyFC5Db3JvbmEuTWF0",
            "Y2hNZXNzYWdlIk8KBlJlZ2lvbhIYChBsYXR0aXR1ZGVfcHJlZml4GAEgAigB",
            "EhgKEGxvbmdpdHVkZV9wcmVmaXgYAiACKAESEQoJcHJlY2lzaW9uGAMgAigF",
            "Ik0KC01lc3NhZ2VJbmZvEhIKCm1lc3NhZ2VfaWQYASACKAkSKgoRbWVzc2Fn",
            "ZV90aW1lc3RhbXAYAiACKAsyDy5Db3JvbmEuVVRDVGltZSJkCg5CbHVldG9v",
            "dGhNYXRjaBIrCgx1c2VyX21lc3NhZ2UYASACKAsyFS5Db3JvbmEuQ3J5cHRv",
            "TWVzc2FnZRIlCgVzZWVkcxgCIAMoCzIWLkNvcm9uYS5CbHVlVG9vdGhTZWVk",
            "cyJMCg5CbHVlVG9vdGhTZWVkcxIMCgRzZWVkGAEgAigJEiwKE3NlcXVlbmNl",
            "X3N0YXJ0X3RpbWUYAiACKAsyDy5Db3JvbmEuVVRDVGltZSJRCg1DcnlwdG9N",
            "ZXNzYWdlEhQKDG1lc3NhZ2VfZGF0YRgBIAIoDBIWCg5zaWduZWRfbWVzc2Fn",
            "ZRgCIAIoDBISCgpwdWJsaWNfa2V5GAMgAigMIpcBCglBcmVhTWF0Y2gSKwoM",
            "dXNlcl9tZXNzYWdlGAEgAigLMhUuQ29yb25hLkNyeXB0b01lc3NhZ2USGwoF",
            "YXJlYXMYAiADKAsyDC5Db3JvbmEuQXJlYRIfChdwcm94aW1pdHlfcmFkaXVz",
            "X21ldGVycxgDIAIoAhIfChdkdXJhdGlvbl90b2xlcmFuY2Vfc2VjcxgEIAIo",
            "BSKJAQoEQXJlYRIiCghsb2NhdGlvbhgBIAIoCzIQLkNvcm9uYS5Mb2NhdGlv",
            "bhIVCg1yYWRpdXNfbWV0ZXJzGAIgAigCEiMKCmJlZ2luX3RpbWUYAyACKAsy",
            "Dy5Db3JvbmEuVVRDVGltZRIhCghlbmRfdGltZRgEIAIoCzIPLkNvcm9uYS5V",
            "VENUaW1lInYKB1VUQ1RpbWUSDAoEeWVhchgBIAIoBRINCgVtb250aBgCIAIo",
            "BRILCgNkYXkYAyACKAUSDAoEaG91chgEIAIoBRIOCgZtaW51dGUYBSACKAUS",
            "DgoGc2Vjb25kGAkgAigFEhMKC21pbGxpc2Vjb25kGAogAigFIjAKCExvY2F0",
            "aW9uEhEKCWxhdHRpdHVkZRgBIAIoAhIRCglsb25naXR1ZGUYAiACKAIiWAoP",
            "QW5ub3VuY2VSZXF1ZXN0EiUKB21lc3NhZ2UYASACKAsyFC5Db3JvbmEuTWF0",
            "Y2hNZXNzYWdlEh4KBnJlZ2lvbhgCIAIoCzIOLkNvcm9uYS5SZWdpb25CH6oC",
            "HFRyYWNlRGVmZW5zZS5FbnRpdGllcy5Qcm90b3M="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.MessageSizeRequest), global::TraceDefense.Entities.Protos.MessageSizeRequest.Parser, new[]{ "Region", "LastQueryTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.MessageSizeResponse), global::TraceDefense.Entities.Protos.MessageSizeResponse.Parser, new[]{ "SizeOfQueryResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.MessageListRequest), global::TraceDefense.Entities.Protos.MessageListRequest.Parser, new[]{ "Region", "LastQueryTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.MessageListResponse), global::TraceDefense.Entities.Protos.MessageListResponse.Parser, new[]{ "MessageInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.MessageRequest), global::TraceDefense.Entities.Protos.MessageRequest.Parser, new[]{ "RequestedQueries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.MatchMessage), global::TraceDefense.Entities.Protos.MatchMessage.Parser, new[]{ "MatchProtocolVersion", "AreaMatch", "BluetoothMatch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.MessageResponse), global::TraceDefense.Entities.Protos.MessageResponse.Parser, new[]{ "Messages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.Region), global::TraceDefense.Entities.Protos.Region.Parser, new[]{ "LattitudePrefix", "LongitudePrefix", "Precision" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.MessageInfo), global::TraceDefense.Entities.Protos.MessageInfo.Parser, new[]{ "MessageId", "MessageTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.BluetoothMatch), global::TraceDefense.Entities.Protos.BluetoothMatch.Parser, new[]{ "UserMessage", "Seeds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.BlueToothSeeds), global::TraceDefense.Entities.Protos.BlueToothSeeds.Parser, new[]{ "Seed", "SequenceStartTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.CryptoMessage), global::TraceDefense.Entities.Protos.CryptoMessage.Parser, new[]{ "MessageData", "SignedMessage", "PublicKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.AreaMatch), global::TraceDefense.Entities.Protos.AreaMatch.Parser, new[]{ "UserMessage", "Areas", "ProximityRadiusMeters", "DurationToleranceSecs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.Area), global::TraceDefense.Entities.Protos.Area.Parser, new[]{ "Location", "RadiusMeters", "BeginTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.UTCTime), global::TraceDefense.Entities.Protos.UTCTime.Parser, new[]{ "Year", "Month", "Day", "Hour", "Minute", "Second", "Millisecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.Location), global::TraceDefense.Entities.Protos.Location.Parser, new[]{ "Lattitude", "Longitude" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TraceDefense.Entities.Protos.AnnounceRequest), global::TraceDefense.Entities.Protos.AnnounceRequest.Parser, new[]{ "Message", "Region" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Phone -> Server; Request to get size of messages queued for a region since last query time
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class MessageSizeRequest : pb::IMessage<MessageSizeRequest> {
    private static readonly pb::MessageParser<MessageSizeRequest> _parser = new pb::MessageParser<MessageSizeRequest>(() => new MessageSizeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageSizeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageSizeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageSizeRequest(MessageSizeRequest other) : this() {
      region_ = other.HasRegion ? other.region_.Clone() : null;
      lastQueryTime_ = other.HasLastQueryTime ? other.lastQueryTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageSizeRequest Clone() {
      return new MessageSizeRequest(this);
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 1;
    private global::TraceDefense.Entities.Protos.Region region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.Region Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }
    /// <summary>Gets whether the region field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return region_ != null; }
    }
    /// <summary>Clears the value of the region field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      region_ = null;
    }

    /// <summary>Field number for the "last_query_time" field.</summary>
    public const int LastQueryTimeFieldNumber = 2;
    private global::TraceDefense.Entities.Protos.UTCTime lastQueryTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.UTCTime LastQueryTime {
      get { return lastQueryTime_; }
      set {
        lastQueryTime_ = value;
      }
    }
    /// <summary>Gets whether the last_query_time field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastQueryTime {
      get { return lastQueryTime_ != null; }
    }
    /// <summary>Clears the value of the last_query_time field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastQueryTime() {
      lastQueryTime_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageSizeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageSizeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Region, other.Region)) return false;
      if (!object.Equals(LastQueryTime, other.LastQueryTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRegion) hash ^= Region.GetHashCode();
      if (HasLastQueryTime) hash ^= LastQueryTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasRegion) {
        output.WriteRawTag(10);
        output.WriteMessage(Region);
      }
      if (HasLastQueryTime) {
        output.WriteRawTag(18);
        output.WriteMessage(LastQueryTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Region);
      }
      if (HasLastQueryTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastQueryTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageSizeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRegion) {
        if (!HasRegion) {
          Region = new global::TraceDefense.Entities.Protos.Region();
        }
        Region.MergeFrom(other.Region);
      }
      if (other.HasLastQueryTime) {
        if (!HasLastQueryTime) {
          LastQueryTime = new global::TraceDefense.Entities.Protos.UTCTime();
        }
        LastQueryTime.MergeFrom(other.LastQueryTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasRegion) {
              Region = new global::TraceDefense.Entities.Protos.Region();
            }
            input.ReadMessage(Region);
            break;
          }
          case 18: {
            if (!HasLastQueryTime) {
              LastQueryTime = new global::TraceDefense.Entities.Protos.UTCTime();
            }
            input.ReadMessage(LastQueryTime);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Server -> Phone; Provide size of query in bytes of the response
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class MessageSizeResponse : pb::IMessage<MessageSizeResponse> {
    private static readonly pb::MessageParser<MessageSizeResponse> _parser = new pb::MessageParser<MessageSizeResponse>(() => new MessageSizeResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageSizeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageSizeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageSizeResponse(MessageSizeResponse other) : this() {
      _hasBits0 = other._hasBits0;
      sizeOfQueryResponse_ = other.sizeOfQueryResponse_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageSizeResponse Clone() {
      return new MessageSizeResponse(this);
    }

    /// <summary>Field number for the "size_of_query_response" field.</summary>
    public const int SizeOfQueryResponseFieldNumber = 1;
    private readonly static long SizeOfQueryResponseDefaultValue = 0L;

    private long sizeOfQueryResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SizeOfQueryResponse {
      get { if ((_hasBits0 & 1) != 0) { return sizeOfQueryResponse_; } else { return SizeOfQueryResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sizeOfQueryResponse_ = value;
      }
    }
    /// <summary>Gets whether the "size_of_query_response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSizeOfQueryResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "size_of_query_response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSizeOfQueryResponse() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageSizeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageSizeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SizeOfQueryResponse != other.SizeOfQueryResponse) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSizeOfQueryResponse) hash ^= SizeOfQueryResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSizeOfQueryResponse) {
        output.WriteRawTag(8);
        output.WriteInt64(SizeOfQueryResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSizeOfQueryResponse) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SizeOfQueryResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageSizeResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSizeOfQueryResponse) {
        SizeOfQueryResponse = other.SizeOfQueryResponse;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SizeOfQueryResponse = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Phone -> Server;
  /// Get list of messages queued for a region since last query time
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class MessageListRequest : pb::IMessage<MessageListRequest> {
    private static readonly pb::MessageParser<MessageListRequest> _parser = new pb::MessageParser<MessageListRequest>(() => new MessageListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageListRequest(MessageListRequest other) : this() {
      region_ = other.HasRegion ? other.region_.Clone() : null;
      lastQueryTime_ = other.HasLastQueryTime ? other.lastQueryTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageListRequest Clone() {
      return new MessageListRequest(this);
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 1;
    private global::TraceDefense.Entities.Protos.Region region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.Region Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }
    /// <summary>Gets whether the region field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return region_ != null; }
    }
    /// <summary>Clears the value of the region field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      region_ = null;
    }

    /// <summary>Field number for the "last_query_time" field.</summary>
    public const int LastQueryTimeFieldNumber = 2;
    private global::TraceDefense.Entities.Protos.UTCTime lastQueryTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.UTCTime LastQueryTime {
      get { return lastQueryTime_; }
      set {
        lastQueryTime_ = value;
      }
    }
    /// <summary>Gets whether the last_query_time field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastQueryTime {
      get { return lastQueryTime_ != null; }
    }
    /// <summary>Clears the value of the last_query_time field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastQueryTime() {
      lastQueryTime_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Region, other.Region)) return false;
      if (!object.Equals(LastQueryTime, other.LastQueryTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRegion) hash ^= Region.GetHashCode();
      if (HasLastQueryTime) hash ^= LastQueryTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasRegion) {
        output.WriteRawTag(10);
        output.WriteMessage(Region);
      }
      if (HasLastQueryTime) {
        output.WriteRawTag(18);
        output.WriteMessage(LastQueryTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Region);
      }
      if (HasLastQueryTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastQueryTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageListRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRegion) {
        if (!HasRegion) {
          Region = new global::TraceDefense.Entities.Protos.Region();
        }
        Region.MergeFrom(other.Region);
      }
      if (other.HasLastQueryTime) {
        if (!HasLastQueryTime) {
          LastQueryTime = new global::TraceDefense.Entities.Protos.UTCTime();
        }
        LastQueryTime.MergeFrom(other.LastQueryTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasRegion) {
              Region = new global::TraceDefense.Entities.Protos.Region();
            }
            input.ReadMessage(Region);
            break;
          }
          case 18: {
            if (!HasLastQueryTime) {
              LastQueryTime = new global::TraceDefense.Entities.Protos.UTCTime();
            }
            input.ReadMessage(LastQueryTime);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Server -> Phone; list of messages for region
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class MessageListResponse : pb::IMessage<MessageListResponse> {
    private static readonly pb::MessageParser<MessageListResponse> _parser = new pb::MessageParser<MessageListResponse>(() => new MessageListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageListResponse(MessageListResponse other) : this() {
      messageInfo_ = other.messageInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageListResponse Clone() {
      return new MessageListResponse(this);
    }

    /// <summary>Field number for the "message_info" field.</summary>
    public const int MessageInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TraceDefense.Entities.Protos.MessageInfo> _repeated_messageInfo_codec
        = pb::FieldCodec.ForMessage(10, global::TraceDefense.Entities.Protos.MessageInfo.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.Entities.Protos.MessageInfo> messageInfo_ = new pbc::RepeatedField<global::TraceDefense.Entities.Protos.MessageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.Entities.Protos.MessageInfo> MessageInfo {
      get { return messageInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messageInfo_.Equals(other.messageInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messageInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      messageInfo_.WriteTo(output, _repeated_messageInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += messageInfo_.CalculateSize(_repeated_messageInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageListResponse other) {
      if (other == null) {
        return;
      }
      messageInfo_.Add(other.messageInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            messageInfo_.AddEntriesFrom(input, _repeated_messageInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Phone -> Server GetMessages(new_message_ids)
  /// Request to download the details of given query ids
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class MessageRequest : pb::IMessage<MessageRequest> {
    private static readonly pb::MessageParser<MessageRequest> _parser = new pb::MessageParser<MessageRequest>(() => new MessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageRequest(MessageRequest other) : this() {
      requestedQueries_ = other.requestedQueries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageRequest Clone() {
      return new MessageRequest(this);
    }

    /// <summary>Field number for the "requested_queries" field.</summary>
    public const int RequestedQueriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TraceDefense.Entities.Protos.MessageInfo> _repeated_requestedQueries_codec
        = pb::FieldCodec.ForMessage(10, global::TraceDefense.Entities.Protos.MessageInfo.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.Entities.Protos.MessageInfo> requestedQueries_ = new pbc::RepeatedField<global::TraceDefense.Entities.Protos.MessageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.Entities.Protos.MessageInfo> RequestedQueries {
      get { return requestedQueries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!requestedQueries_.Equals(other.requestedQueries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= requestedQueries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      requestedQueries_.WriteTo(output, _repeated_requestedQueries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += requestedQueries_.CalculateSize(_repeated_requestedQueries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageRequest other) {
      if (other == null) {
        return;
      }
      requestedQueries_.Add(other.requestedQueries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            requestedQueries_.AddEntriesFrom(input, _repeated_requestedQueries_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Server -> Phone (list of messages corresponding to touch points where
  /// infection can occour)
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class MatchMessage : pb::IMessage<MatchMessage> {
    private static readonly pb::MessageParser<MatchMessage> _parser = new pb::MessageParser<MatchMessage>(() => new MatchMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchMessage(MatchMessage other) : this() {
      matchProtocolVersion_ = other.matchProtocolVersion_;
      areaMatch_ = other.areaMatch_.Clone();
      bluetoothMatch_ = other.bluetoothMatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchMessage Clone() {
      return new MatchMessage(this);
    }

    /// <summary>Field number for the "match_protocol_version" field.</summary>
    public const int MatchProtocolVersionFieldNumber = 1;
    private readonly static string MatchProtocolVersionDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("MS4wLjA="), 0, 5);

    private string matchProtocolVersion_;
    /// <summary>
    /// This is set to a different constant when match becomes semantically different.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatchProtocolVersion {
      get { return matchProtocolVersion_ ?? MatchProtocolVersionDefaultValue; }
      set {
        matchProtocolVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "match_protocol_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMatchProtocolVersion {
      get { return matchProtocolVersion_ != null; }
    }
    /// <summary>Clears the value of the "match_protocol_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMatchProtocolVersion() {
      matchProtocolVersion_ = null;
    }

    /// <summary>Field number for the "area_match" field.</summary>
    public const int AreaMatchFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TraceDefense.Entities.Protos.AreaMatch> _repeated_areaMatch_codec
        = pb::FieldCodec.ForMessage(18, global::TraceDefense.Entities.Protos.AreaMatch.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.Entities.Protos.AreaMatch> areaMatch_ = new pbc::RepeatedField<global::TraceDefense.Entities.Protos.AreaMatch>();
    /// <summary>
    /// at or around &lt;place[]> for more than &lt;duration> around &lt;time[]>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.Entities.Protos.AreaMatch> AreaMatch {
      get { return areaMatch_; }
    }

    /// <summary>Field number for the "bluetooth_match" field.</summary>
    public const int BluetoothMatchFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TraceDefense.Entities.Protos.BluetoothMatch> _repeated_bluetoothMatch_codec
        = pb::FieldCodec.ForMessage(26, global::TraceDefense.Entities.Protos.BluetoothMatch.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.Entities.Protos.BluetoothMatch> bluetoothMatch_ = new pbc::RepeatedField<global::TraceDefense.Entities.Protos.BluetoothMatch>();
    /// <summary>
    /// near &lt;person>; where person is identified by some kind of blue tooth beacon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.Entities.Protos.BluetoothMatch> BluetoothMatch {
      get { return bluetoothMatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchProtocolVersion != other.MatchProtocolVersion) return false;
      if(!areaMatch_.Equals(other.areaMatch_)) return false;
      if(!bluetoothMatch_.Equals(other.bluetoothMatch_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMatchProtocolVersion) hash ^= MatchProtocolVersion.GetHashCode();
      hash ^= areaMatch_.GetHashCode();
      hash ^= bluetoothMatch_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMatchProtocolVersion) {
        output.WriteRawTag(10);
        output.WriteString(MatchProtocolVersion);
      }
      areaMatch_.WriteTo(output, _repeated_areaMatch_codec);
      bluetoothMatch_.WriteTo(output, _repeated_bluetoothMatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMatchProtocolVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatchProtocolVersion);
      }
      size += areaMatch_.CalculateSize(_repeated_areaMatch_codec);
      size += bluetoothMatch_.CalculateSize(_repeated_bluetoothMatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasMatchProtocolVersion) {
        MatchProtocolVersion = other.MatchProtocolVersion;
      }
      areaMatch_.Add(other.areaMatch_);
      bluetoothMatch_.Add(other.bluetoothMatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatchProtocolVersion = input.ReadString();
            break;
          }
          case 18: {
            areaMatch_.AddEntriesFrom(input, _repeated_areaMatch_codec);
            break;
          }
          case 26: {
            bluetoothMatch_.AddEntriesFrom(input, _repeated_bluetoothMatch_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Server -> Phone; messages bodies
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class MessageResponse : pb::IMessage<MessageResponse> {
    private static readonly pb::MessageParser<MessageResponse> _parser = new pb::MessageParser<MessageResponse>(() => new MessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageResponse(MessageResponse other) : this() {
      messages_ = other.messages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageResponse Clone() {
      return new MessageResponse(this);
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TraceDefense.Entities.Protos.MatchMessage> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(10, global::TraceDefense.Entities.Protos.MatchMessage.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.Entities.Protos.MatchMessage> messages_ = new pbc::RepeatedField<global::TraceDefense.Entities.Protos.MatchMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.Entities.Protos.MatchMessage> Messages {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messages_.Equals(other.messages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      messages_.WriteTo(output, _repeated_messages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageResponse other) {
      if (other == null) {
        return;
      }
      messages_.Add(other.messages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents a geographic region quantized by precision of lat/long
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class Region : pb::IMessage<Region> {
    private static readonly pb::MessageParser<Region> _parser = new pb::MessageParser<Region>(() => new Region());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Region> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Region() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Region(Region other) : this() {
      _hasBits0 = other._hasBits0;
      lattitudePrefix_ = other.lattitudePrefix_;
      longitudePrefix_ = other.longitudePrefix_;
      precision_ = other.precision_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Region Clone() {
      return new Region(this);
    }

    /// <summary>Field number for the "lattitude_prefix" field.</summary>
    public const int LattitudePrefixFieldNumber = 1;
    private readonly static double LattitudePrefixDefaultValue = 0D;

    private double lattitudePrefix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double LattitudePrefix {
      get { if ((_hasBits0 & 1) != 0) { return lattitudePrefix_; } else { return LattitudePrefixDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lattitudePrefix_ = value;
      }
    }
    /// <summary>Gets whether the "lattitude_prefix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLattitudePrefix {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "lattitude_prefix" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLattitudePrefix() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "longitude_prefix" field.</summary>
    public const int LongitudePrefixFieldNumber = 2;
    private readonly static double LongitudePrefixDefaultValue = 0D;

    private double longitudePrefix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double LongitudePrefix {
      get { if ((_hasBits0 & 2) != 0) { return longitudePrefix_; } else { return LongitudePrefixDefaultValue; } }
      set {
        _hasBits0 |= 2;
        longitudePrefix_ = value;
      }
    }
    /// <summary>Gets whether the "longitude_prefix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLongitudePrefix {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "longitude_prefix" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLongitudePrefix() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "precision" field.</summary>
    public const int PrecisionFieldNumber = 3;
    private readonly static int PrecisionDefaultValue = 0;

    private int precision_;
    /// <summary>
    /// Mantissa mask.  Number of bits of Mantissa that should be preserved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Precision {
      get { if ((_hasBits0 & 4) != 0) { return precision_; } else { return PrecisionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        precision_ = value;
      }
    }
    /// <summary>Gets whether the "precision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrecision {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "precision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrecision() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Region);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Region other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LattitudePrefix, other.LattitudePrefix)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LongitudePrefix, other.LongitudePrefix)) return false;
      if (Precision != other.Precision) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLattitudePrefix) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LattitudePrefix);
      if (HasLongitudePrefix) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LongitudePrefix);
      if (HasPrecision) hash ^= Precision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLattitudePrefix) {
        output.WriteRawTag(9);
        output.WriteDouble(LattitudePrefix);
      }
      if (HasLongitudePrefix) {
        output.WriteRawTag(17);
        output.WriteDouble(LongitudePrefix);
      }
      if (HasPrecision) {
        output.WriteRawTag(24);
        output.WriteInt32(Precision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLattitudePrefix) {
        size += 1 + 8;
      }
      if (HasLongitudePrefix) {
        size += 1 + 8;
      }
      if (HasPrecision) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Precision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Region other) {
      if (other == null) {
        return;
      }
      if (other.HasLattitudePrefix) {
        LattitudePrefix = other.LattitudePrefix;
      }
      if (other.HasLongitudePrefix) {
        LongitudePrefix = other.LongitudePrefix;
      }
      if (other.HasPrecision) {
        Precision = other.Precision;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            LattitudePrefix = input.ReadDouble();
            break;
          }
          case 17: {
            LongitudePrefix = input.ReadDouble();
            break;
          }
          case 24: {
            Precision = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Metadata about each query
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class MessageInfo : pb::IMessage<MessageInfo> {
    private static readonly pb::MessageParser<MessageInfo> _parser = new pb::MessageParser<MessageInfo>(() => new MessageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageInfo(MessageInfo other) : this() {
      messageId_ = other.messageId_;
      messageTimestamp_ = other.HasMessageTimestamp ? other.messageTimestamp_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageInfo Clone() {
      return new MessageInfo(this);
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 1;
    private readonly static string MessageIdDefaultValue = "";

    private string messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageId {
      get { return messageId_ ?? MessageIdDefaultValue; }
      set {
        messageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageId {
      get { return messageId_ != null; }
    }
    /// <summary>Clears the value of the "message_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageId() {
      messageId_ = null;
    }

    /// <summary>Field number for the "message_timestamp" field.</summary>
    public const int MessageTimestampFieldNumber = 2;
    private global::TraceDefense.Entities.Protos.UTCTime messageTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.UTCTime MessageTimestamp {
      get { return messageTimestamp_; }
      set {
        messageTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the message_timestamp field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageTimestamp {
      get { return messageTimestamp_ != null; }
    }
    /// <summary>Clears the value of the message_timestamp field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageTimestamp() {
      messageTimestamp_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageId != other.MessageId) return false;
      if (!object.Equals(MessageTimestamp, other.MessageTimestamp)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMessageId) hash ^= MessageId.GetHashCode();
      if (HasMessageTimestamp) hash ^= MessageTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMessageId) {
        output.WriteRawTag(10);
        output.WriteString(MessageId);
      }
      if (HasMessageTimestamp) {
        output.WriteRawTag(18);
        output.WriteMessage(MessageTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMessageId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageId);
      }
      if (HasMessageTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasMessageId) {
        MessageId = other.MessageId;
      }
      if (other.HasMessageTimestamp) {
        if (!HasMessageTimestamp) {
          MessageTimestamp = new global::TraceDefense.Entities.Protos.UTCTime();
        }
        MessageTimestamp.MergeFrom(other.MessageTimestamp);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MessageId = input.ReadString();
            break;
          }
          case 18: {
            if (!HasMessageTimestamp) {
              MessageTimestamp = new global::TraceDefense.Entities.Protos.UTCTime();
            }
            input.ReadMessage(MessageTimestamp);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// List of blue tooth beacons
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class BluetoothMatch : pb::IMessage<BluetoothMatch> {
    private static readonly pb::MessageParser<BluetoothMatch> _parser = new pb::MessageParser<BluetoothMatch>(() => new BluetoothMatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BluetoothMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BluetoothMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BluetoothMatch(BluetoothMatch other) : this() {
      userMessage_ = other.HasUserMessage ? other.userMessage_.Clone() : null;
      seeds_ = other.seeds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BluetoothMatch Clone() {
      return new BluetoothMatch(this);
    }

    /// <summary>Field number for the "user_message" field.</summary>
    public const int UserMessageFieldNumber = 1;
    private global::TraceDefense.Entities.Protos.CryptoMessage userMessage_;
    /// <summary>
    /// bluetooth_query Message to be displayed to the user if there is a match
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.CryptoMessage UserMessage {
      get { return userMessage_; }
      set {
        userMessage_ = value;
      }
    }
    /// <summary>Gets whether the user_message field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserMessage {
      get { return userMessage_ != null; }
    }
    /// <summary>Clears the value of the user_message field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserMessage() {
      userMessage_ = null;
    }

    /// <summary>Field number for the "seeds" field.</summary>
    public const int SeedsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TraceDefense.Entities.Protos.BlueToothSeeds> _repeated_seeds_codec
        = pb::FieldCodec.ForMessage(18, global::TraceDefense.Entities.Protos.BlueToothSeeds.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.Entities.Protos.BlueToothSeeds> seeds_ = new pbc::RepeatedField<global::TraceDefense.Entities.Protos.BlueToothSeeds>();
    /// <summary>
    /// Anonymized blue tooth beacons (or other exact match identifiers if
    /// available)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.Entities.Protos.BlueToothSeeds> Seeds {
      get { return seeds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BluetoothMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BluetoothMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserMessage, other.UserMessage)) return false;
      if(!seeds_.Equals(other.seeds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserMessage) hash ^= UserMessage.GetHashCode();
      hash ^= seeds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUserMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(UserMessage);
      }
      seeds_.WriteTo(output, _repeated_seeds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMessage);
      }
      size += seeds_.CalculateSize(_repeated_seeds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BluetoothMatch other) {
      if (other == null) {
        return;
      }
      if (other.HasUserMessage) {
        if (!HasUserMessage) {
          UserMessage = new global::TraceDefense.Entities.Protos.CryptoMessage();
        }
        UserMessage.MergeFrom(other.UserMessage);
      }
      seeds_.Add(other.seeds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasUserMessage) {
              UserMessage = new global::TraceDefense.Entities.Protos.CryptoMessage();
            }
            input.ReadMessage(UserMessage);
            break;
          }
          case 18: {
            seeds_.AddEntriesFrom(input, _repeated_seeds_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.SerializableAttribute]
  public sealed partial class BlueToothSeeds : pb::IMessage<BlueToothSeeds> {
    private static readonly pb::MessageParser<BlueToothSeeds> _parser = new pb::MessageParser<BlueToothSeeds>(() => new BlueToothSeeds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlueToothSeeds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlueToothSeeds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlueToothSeeds(BlueToothSeeds other) : this() {
      seed_ = other.seed_;
      sequenceStartTime_ = other.HasSequenceStartTime ? other.sequenceStartTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlueToothSeeds Clone() {
      return new BlueToothSeeds(this);
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 1;
    private readonly static string SeedDefaultValue = "";

    private string seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Seed {
      get { return seed_ ?? SeedDefaultValue; }
      set {
        seed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "seed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSeed {
      get { return seed_ != null; }
    }
    /// <summary>Clears the value of the "seed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSeed() {
      seed_ = null;
    }

    /// <summary>Field number for the "sequence_start_time" field.</summary>
    public const int SequenceStartTimeFieldNumber = 2;
    private global::TraceDefense.Entities.Protos.UTCTime sequenceStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.UTCTime SequenceStartTime {
      get { return sequenceStartTime_; }
      set {
        sequenceStartTime_ = value;
      }
    }
    /// <summary>Gets whether the sequence_start_time field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSequenceStartTime {
      get { return sequenceStartTime_ != null; }
    }
    /// <summary>Clears the value of the sequence_start_time field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSequenceStartTime() {
      sequenceStartTime_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlueToothSeeds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlueToothSeeds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seed != other.Seed) return false;
      if (!object.Equals(SequenceStartTime, other.SequenceStartTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSeed) hash ^= Seed.GetHashCode();
      if (HasSequenceStartTime) hash ^= SequenceStartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSeed) {
        output.WriteRawTag(10);
        output.WriteString(Seed);
      }
      if (HasSequenceStartTime) {
        output.WriteRawTag(18);
        output.WriteMessage(SequenceStartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSeed) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Seed);
      }
      if (HasSequenceStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SequenceStartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlueToothSeeds other) {
      if (other == null) {
        return;
      }
      if (other.HasSeed) {
        Seed = other.Seed;
      }
      if (other.HasSequenceStartTime) {
        if (!HasSequenceStartTime) {
          SequenceStartTime = new global::TraceDefense.Entities.Protos.UTCTime();
        }
        SequenceStartTime.MergeFrom(other.SequenceStartTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Seed = input.ReadString();
            break;
          }
          case 18: {
            if (!HasSequenceStartTime) {
              SequenceStartTime = new global::TraceDefense.Entities.Protos.UTCTime();
            }
            input.ReadMessage(SequenceStartTime);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Cryptographically signed message
  /// to be displayed to the user
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class CryptoMessage : pb::IMessage<CryptoMessage> {
    private static readonly pb::MessageParser<CryptoMessage> _parser = new pb::MessageParser<CryptoMessage>(() => new CryptoMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CryptoMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoMessage(CryptoMessage other) : this() {
      messageData_ = other.messageData_;
      signedMessage_ = other.signedMessage_;
      publicKey_ = other.publicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoMessage Clone() {
      return new CryptoMessage(this);
    }

    /// <summary>Field number for the "message_data" field.</summary>
    public const int MessageDataFieldNumber = 1;
    private readonly static pb::ByteString MessageDataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString messageData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageData {
      get { return messageData_ ?? MessageDataDefaultValue; }
      set {
        messageData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageData {
      get { return messageData_ != null; }
    }
    /// <summary>Clears the value of the "message_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageData() {
      messageData_ = null;
    }

    /// <summary>Field number for the "signed_message" field.</summary>
    public const int SignedMessageFieldNumber = 2;
    private readonly static pb::ByteString SignedMessageDefaultValue = pb::ByteString.Empty;

    private pb::ByteString signedMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SignedMessage {
      get { return signedMessage_ ?? SignedMessageDefaultValue; }
      set {
        signedMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "signed_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSignedMessage {
      get { return signedMessage_ != null; }
    }
    /// <summary>Clears the value of the "signed_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSignedMessage() {
      signedMessage_ = null;
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 3;
    private readonly static pb::ByteString PublicKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString publicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PublicKey {
      get { return publicKey_ ?? PublicKeyDefaultValue; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "public_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPublicKey {
      get { return publicKey_ != null; }
    }
    /// <summary>Clears the value of the "public_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPublicKey() {
      publicKey_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CryptoMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CryptoMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageData != other.MessageData) return false;
      if (SignedMessage != other.SignedMessage) return false;
      if (PublicKey != other.PublicKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMessageData) hash ^= MessageData.GetHashCode();
      if (HasSignedMessage) hash ^= SignedMessage.GetHashCode();
      if (HasPublicKey) hash ^= PublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMessageData) {
        output.WriteRawTag(10);
        output.WriteBytes(MessageData);
      }
      if (HasSignedMessage) {
        output.WriteRawTag(18);
        output.WriteBytes(SignedMessage);
      }
      if (HasPublicKey) {
        output.WriteRawTag(26);
        output.WriteBytes(PublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMessageData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageData);
      }
      if (HasSignedMessage) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SignedMessage);
      }
      if (HasPublicKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CryptoMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasMessageData) {
        MessageData = other.MessageData;
      }
      if (other.HasSignedMessage) {
        SignedMessage = other.SignedMessage;
      }
      if (other.HasPublicKey) {
        PublicKey = other.PublicKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MessageData = input.ReadBytes();
            break;
          }
          case 18: {
            SignedMessage = input.ReadBytes();
            break;
          }
          case 26: {
            PublicKey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// List of locations
  /// </summary>
  [global::System.SerializableAttribute]
  public sealed partial class AreaMatch : pb::IMessage<AreaMatch> {
    private static readonly pb::MessageParser<AreaMatch> _parser = new pb::MessageParser<AreaMatch>(() => new AreaMatch());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AreaMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaMatch(AreaMatch other) : this() {
      _hasBits0 = other._hasBits0;
      userMessage_ = other.HasUserMessage ? other.userMessage_.Clone() : null;
      areas_ = other.areas_.Clone();
      proximityRadiusMeters_ = other.proximityRadiusMeters_;
      durationToleranceSecs_ = other.durationToleranceSecs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaMatch Clone() {
      return new AreaMatch(this);
    }

    /// <summary>Field number for the "user_message" field.</summary>
    public const int UserMessageFieldNumber = 1;
    private global::TraceDefense.Entities.Protos.CryptoMessage userMessage_;
    /// <summary>
    /// Message to be displayed to the user if there is a match
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.CryptoMessage UserMessage {
      get { return userMessage_; }
      set {
        userMessage_ = value;
      }
    }
    /// <summary>Gets whether the user_message field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUserMessage {
      get { return userMessage_ != null; }
    }
    /// <summary>Clears the value of the user_message field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserMessage() {
      userMessage_ = null;
    }

    /// <summary>Field number for the "areas" field.</summary>
    public const int AreasFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TraceDefense.Entities.Protos.Area> _repeated_areas_codec
        = pb::FieldCodec.ForMessage(18, global::TraceDefense.Entities.Protos.Area.Parser);
    private readonly pbc::RepeatedField<global::TraceDefense.Entities.Protos.Area> areas_ = new pbc::RepeatedField<global::TraceDefense.Entities.Protos.Area>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TraceDefense.Entities.Protos.Area> Areas {
      get { return areas_; }
    }

    /// <summary>Field number for the "proximity_radius_meters" field.</summary>
    public const int ProximityRadiusMetersFieldNumber = 3;
    private readonly static float ProximityRadiusMetersDefaultValue = 0F;

    private float proximityRadiusMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ProximityRadiusMeters {
      get { if ((_hasBits0 & 1) != 0) { return proximityRadiusMeters_; } else { return ProximityRadiusMetersDefaultValue; } }
      set {
        _hasBits0 |= 1;
        proximityRadiusMeters_ = value;
      }
    }
    /// <summary>Gets whether the "proximity_radius_meters" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProximityRadiusMeters {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "proximity_radius_meters" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProximityRadiusMeters() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "duration_tolerance_secs" field.</summary>
    public const int DurationToleranceSecsFieldNumber = 4;
    private readonly static int DurationToleranceSecsDefaultValue = 0;

    private int durationToleranceSecs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DurationToleranceSecs {
      get { if ((_hasBits0 & 2) != 0) { return durationToleranceSecs_; } else { return DurationToleranceSecsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        durationToleranceSecs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_tolerance_secs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDurationToleranceSecs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "duration_tolerance_secs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDurationToleranceSecs() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AreaMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AreaMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserMessage, other.UserMessage)) return false;
      if(!areas_.Equals(other.areas_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ProximityRadiusMeters, other.ProximityRadiusMeters)) return false;
      if (DurationToleranceSecs != other.DurationToleranceSecs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserMessage) hash ^= UserMessage.GetHashCode();
      hash ^= areas_.GetHashCode();
      if (HasProximityRadiusMeters) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ProximityRadiusMeters);
      if (HasDurationToleranceSecs) hash ^= DurationToleranceSecs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasUserMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(UserMessage);
      }
      areas_.WriteTo(output, _repeated_areas_codec);
      if (HasProximityRadiusMeters) {
        output.WriteRawTag(29);
        output.WriteFloat(ProximityRadiusMeters);
      }
      if (HasDurationToleranceSecs) {
        output.WriteRawTag(32);
        output.WriteInt32(DurationToleranceSecs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUserMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMessage);
      }
      size += areas_.CalculateSize(_repeated_areas_codec);
      if (HasProximityRadiusMeters) {
        size += 1 + 4;
      }
      if (HasDurationToleranceSecs) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DurationToleranceSecs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AreaMatch other) {
      if (other == null) {
        return;
      }
      if (other.HasUserMessage) {
        if (!HasUserMessage) {
          UserMessage = new global::TraceDefense.Entities.Protos.CryptoMessage();
        }
        UserMessage.MergeFrom(other.UserMessage);
      }
      areas_.Add(other.areas_);
      if (other.HasProximityRadiusMeters) {
        ProximityRadiusMeters = other.ProximityRadiusMeters;
      }
      if (other.HasDurationToleranceSecs) {
        DurationToleranceSecs = other.DurationToleranceSecs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasUserMessage) {
              UserMessage = new global::TraceDefense.Entities.Protos.CryptoMessage();
            }
            input.ReadMessage(UserMessage);
            break;
          }
          case 18: {
            areas_.AddEntriesFrom(input, _repeated_areas_codec);
            break;
          }
          case 29: {
            ProximityRadiusMeters = input.ReadFloat();
            break;
          }
          case 32: {
            DurationToleranceSecs = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  [global::System.SerializableAttribute]
  public sealed partial class Area : pb::IMessage<Area> {
    private static readonly pb::MessageParser<Area> _parser = new pb::MessageParser<Area>(() => new Area());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Area> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Area() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Area(Area other) : this() {
      _hasBits0 = other._hasBits0;
      location_ = other.HasLocation ? other.location_.Clone() : null;
      radiusMeters_ = other.radiusMeters_;
      beginTime_ = other.HasBeginTime ? other.beginTime_.Clone() : null;
      endTime_ = other.HasEndTime ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Area Clone() {
      return new Area(this);
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 1;
    private global::TraceDefense.Entities.Protos.Location location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.Location Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }
    /// <summary>Gets whether the location field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocation {
      get { return location_ != null; }
    }
    /// <summary>Clears the value of the location field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocation() {
      location_ = null;
    }

    /// <summary>Field number for the "radius_meters" field.</summary>
    public const int RadiusMetersFieldNumber = 2;
    private readonly static float RadiusMetersDefaultValue = 0F;

    private float radiusMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float RadiusMeters {
      get { if ((_hasBits0 & 1) != 0) { return radiusMeters_; } else { return RadiusMetersDefaultValue; } }
      set {
        _hasBits0 |= 1;
        radiusMeters_ = value;
      }
    }
    /// <summary>Gets whether the "radius_meters" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRadiusMeters {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "radius_meters" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRadiusMeters() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "begin_time" field.</summary>
    public const int BeginTimeFieldNumber = 3;
    private global::TraceDefense.Entities.Protos.UTCTime beginTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.UTCTime BeginTime {
      get { return beginTime_; }
      set {
        beginTime_ = value;
      }
    }
    /// <summary>Gets whether the begin_time field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBeginTime {
      get { return beginTime_ != null; }
    }
    /// <summary>Clears the value of the begin_time field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBeginTime() {
      beginTime_ = null;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private global::TraceDefense.Entities.Protos.UTCTime endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.UTCTime EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the end_time field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndTime {
      get { return endTime_ != null; }
    }
    /// <summary>Clears the value of the end_time field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndTime() {
      endTime_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Area);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Area other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Location, other.Location)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RadiusMeters, other.RadiusMeters)) return false;
      if (!object.Equals(BeginTime, other.BeginTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLocation) hash ^= Location.GetHashCode();
      if (HasRadiusMeters) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RadiusMeters);
      if (HasBeginTime) hash ^= BeginTime.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLocation) {
        output.WriteRawTag(10);
        output.WriteMessage(Location);
      }
      if (HasRadiusMeters) {
        output.WriteRawTag(21);
        output.WriteFloat(RadiusMeters);
      }
      if (HasBeginTime) {
        output.WriteRawTag(26);
        output.WriteMessage(BeginTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(34);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLocation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (HasRadiusMeters) {
        size += 1 + 4;
      }
      if (HasBeginTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BeginTime);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Area other) {
      if (other == null) {
        return;
      }
      if (other.HasLocation) {
        if (!HasLocation) {
          Location = new global::TraceDefense.Entities.Protos.Location();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.HasRadiusMeters) {
        RadiusMeters = other.RadiusMeters;
      }
      if (other.HasBeginTime) {
        if (!HasBeginTime) {
          BeginTime = new global::TraceDefense.Entities.Protos.UTCTime();
        }
        BeginTime.MergeFrom(other.BeginTime);
      }
      if (other.HasEndTime) {
        if (!HasEndTime) {
          EndTime = new global::TraceDefense.Entities.Protos.UTCTime();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasLocation) {
              Location = new global::TraceDefense.Entities.Protos.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 21: {
            RadiusMeters = input.ReadFloat();
            break;
          }
          case 26: {
            if (!HasBeginTime) {
              BeginTime = new global::TraceDefense.Entities.Protos.UTCTime();
            }
            input.ReadMessage(BeginTime);
            break;
          }
          case 34: {
            if (!HasEndTime) {
              EndTime = new global::TraceDefense.Entities.Protos.UTCTime();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }

  }

  [global::System.SerializableAttribute]
  public sealed partial class UTCTime : pb::IMessage<UTCTime> {
    private static readonly pb::MessageParser<UTCTime> _parser = new pb::MessageParser<UTCTime>(() => new UTCTime());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UTCTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UTCTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UTCTime(UTCTime other) : this() {
      _hasBits0 = other._hasBits0;
      year_ = other.year_;
      month_ = other.month_;
      day_ = other.day_;
      hour_ = other.hour_;
      minute_ = other.minute_;
      second_ = other.second_;
      millisecond_ = other.millisecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UTCTime Clone() {
      return new UTCTime(this);
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 1;
    private readonly static int YearDefaultValue = 0;

    private int year_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Year {
      get { if ((_hasBits0 & 1) != 0) { return year_; } else { return YearDefaultValue; } }
      set {
        _hasBits0 |= 1;
        year_ = value;
      }
    }
    /// <summary>Gets whether the "year" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasYear {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "year" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearYear() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "month" field.</summary>
    public const int MonthFieldNumber = 2;
    private readonly static int MonthDefaultValue = 0;

    private int month_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Month {
      get { if ((_hasBits0 & 2) != 0) { return month_; } else { return MonthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        month_ = value;
      }
    }
    /// <summary>Gets whether the "month" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMonth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "month" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMonth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 3;
    private readonly static int DayDefaultValue = 0;

    private int day_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Day {
      get { if ((_hasBits0 & 4) != 0) { return day_; } else { return DayDefaultValue; } }
      set {
        _hasBits0 |= 4;
        day_ = value;
      }
    }
    /// <summary>Gets whether the "day" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDay {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "day" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDay() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 4;
    private readonly static int HourDefaultValue = 0;

    private int hour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hour {
      get { if ((_hasBits0 & 8) != 0) { return hour_; } else { return HourDefaultValue; } }
      set {
        _hasBits0 |= 8;
        hour_ = value;
      }
    }
    /// <summary>Gets whether the "hour" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHour {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "hour" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHour() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "minute" field.</summary>
    public const int MinuteFieldNumber = 5;
    private readonly static int MinuteDefaultValue = 0;

    private int minute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Minute {
      get { if ((_hasBits0 & 16) != 0) { return minute_; } else { return MinuteDefaultValue; } }
      set {
        _hasBits0 |= 16;
        minute_ = value;
      }
    }
    /// <summary>Gets whether the "minute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinute {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "minute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinute() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "second" field.</summary>
    public const int SecondFieldNumber = 9;
    private readonly static int SecondDefaultValue = 0;

    private int second_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Second {
      get { if ((_hasBits0 & 32) != 0) { return second_; } else { return SecondDefaultValue; } }
      set {
        _hasBits0 |= 32;
        second_ = value;
      }
    }
    /// <summary>Gets whether the "second" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecond {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "second" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecond() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "millisecond" field.</summary>
    public const int MillisecondFieldNumber = 10;
    private readonly static int MillisecondDefaultValue = 0;

    private int millisecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Millisecond {
      get { if ((_hasBits0 & 64) != 0) { return millisecond_; } else { return MillisecondDefaultValue; } }
      set {
        _hasBits0 |= 64;
        millisecond_ = value;
      }
    }
    /// <summary>Gets whether the "millisecond" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMillisecond {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "millisecond" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMillisecond() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UTCTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UTCTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Year != other.Year) return false;
      if (Month != other.Month) return false;
      if (Day != other.Day) return false;
      if (Hour != other.Hour) return false;
      if (Minute != other.Minute) return false;
      if (Second != other.Second) return false;
      if (Millisecond != other.Millisecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasYear) hash ^= Year.GetHashCode();
      if (HasMonth) hash ^= Month.GetHashCode();
      if (HasDay) hash ^= Day.GetHashCode();
      if (HasHour) hash ^= Hour.GetHashCode();
      if (HasMinute) hash ^= Minute.GetHashCode();
      if (HasSecond) hash ^= Second.GetHashCode();
      if (HasMillisecond) hash ^= Millisecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasYear) {
        output.WriteRawTag(8);
        output.WriteInt32(Year);
      }
      if (HasMonth) {
        output.WriteRawTag(16);
        output.WriteInt32(Month);
      }
      if (HasDay) {
        output.WriteRawTag(24);
        output.WriteInt32(Day);
      }
      if (HasHour) {
        output.WriteRawTag(32);
        output.WriteInt32(Hour);
      }
      if (HasMinute) {
        output.WriteRawTag(40);
        output.WriteInt32(Minute);
      }
      if (HasSecond) {
        output.WriteRawTag(72);
        output.WriteInt32(Second);
      }
      if (HasMillisecond) {
        output.WriteRawTag(80);
        output.WriteInt32(Millisecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasYear) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Year);
      }
      if (HasMonth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Month);
      }
      if (HasDay) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
      }
      if (HasHour) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hour);
      }
      if (HasMinute) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
      }
      if (HasSecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Second);
      }
      if (HasMillisecond) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Millisecond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UTCTime other) {
      if (other == null) {
        return;
      }
      if (other.HasYear) {
        Year = other.Year;
      }
      if (other.HasMonth) {
        Month = other.Month;
      }
      if (other.HasDay) {
        Day = other.Day;
      }
      if (other.HasHour) {
        Hour = other.Hour;
      }
      if (other.HasMinute) {
        Minute = other.Minute;
      }
      if (other.HasSecond) {
        Second = other.Second;
      }
      if (other.HasMillisecond) {
        Millisecond = other.Millisecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Year = input.ReadInt32();
            break;
          }
          case 16: {
            Month = input.ReadInt32();
            break;
          }
          case 24: {
            Day = input.ReadInt32();
            break;
          }
          case 32: {
            Hour = input.ReadInt32();
            break;
          }
          case 40: {
            Minute = input.ReadInt32();
            break;
          }
          case 72: {
            Second = input.ReadInt32();
            break;
          }
          case 80: {
            Millisecond = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  [global::System.SerializableAttribute]
  public sealed partial class Location : pb::IMessage<Location> {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location(Location other) : this() {
      _hasBits0 = other._hasBits0;
      lattitude_ = other.lattitude_;
      longitude_ = other.longitude_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "lattitude" field.</summary>
    public const int LattitudeFieldNumber = 1;
    private readonly static float LattitudeDefaultValue = 0F;

    private float lattitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Lattitude {
      get { if ((_hasBits0 & 1) != 0) { return lattitude_; } else { return LattitudeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lattitude_ = value;
      }
    }
    /// <summary>Gets whether the "lattitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLattitude {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "lattitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLattitude() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private readonly static float LongitudeDefaultValue = 0F;

    private float longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Longitude {
      get { if ((_hasBits0 & 2) != 0) { return longitude_; } else { return LongitudeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        longitude_ = value;
      }
    }
    /// <summary>Gets whether the "longitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLongitude {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "longitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLongitude() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Lattitude, other.Lattitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLattitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Lattitude);
      if (HasLongitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasLattitude) {
        output.WriteRawTag(13);
        output.WriteFloat(Lattitude);
      }
      if (HasLongitude) {
        output.WriteRawTag(21);
        output.WriteFloat(Longitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLattitude) {
        size += 1 + 4;
      }
      if (HasLongitude) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.HasLattitude) {
        Lattitude = other.Lattitude;
      }
      if (other.HasLongitude) {
        Longitude = other.Longitude;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Lattitude = input.ReadFloat();
            break;
          }
          case 21: {
            Longitude = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  [global::System.SerializableAttribute]
  public sealed partial class AnnounceRequest : pb::IMessage<AnnounceRequest> {
    private static readonly pb::MessageParser<AnnounceRequest> _parser = new pb::MessageParser<AnnounceRequest>(() => new AnnounceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnnounceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TraceDefense.Entities.Protos.InteractionsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnounceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnounceRequest(AnnounceRequest other) : this() {
      message_ = other.HasMessage ? other.message_.Clone() : null;
      region_ = other.HasRegion ? other.region_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnnounceRequest Clone() {
      return new AnnounceRequest(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::TraceDefense.Entities.Protos.MatchMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.MatchMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }
    /// <summary>Gets whether the message field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the message field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 2;
    private global::TraceDefense.Entities.Protos.Region region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TraceDefense.Entities.Protos.Region Region {
      get { return region_; }
      set {
        region_ = value;
      }
    }
    /// <summary>Gets whether the region field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return region_ != null; }
    }
    /// <summary>Clears the value of the region field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      region_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnnounceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnnounceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(Region, other.Region)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMessage) hash ^= Message.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (HasRegion) {
        output.WriteRawTag(18);
        output.WriteMessage(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Region);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnnounceRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasMessage) {
        if (!HasMessage) {
          Message = new global::TraceDefense.Entities.Protos.MatchMessage();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.HasRegion) {
        if (!HasRegion) {
          Region = new global::TraceDefense.Entities.Protos.Region();
        }
        Region.MergeFrom(other.Region);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasMessage) {
              Message = new global::TraceDefense.Entities.Protos.MatchMessage();
            }
            input.ReadMessage(Message);
            break;
          }
          case 18: {
            if (!HasRegion) {
              Region = new global::TraceDefense.Entities.Protos.Region();
            }
            input.ReadMessage(Region);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
