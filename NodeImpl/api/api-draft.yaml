openapi: 3.0.1
info:
  title: CovidSafe
  version: 0.1.0
paths:
  /data/locations:
    post:
      summary: Post location history
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                points:
                  type: array
                  items:
                    $ref: '#/components/schemas/point'
                bluetooth_ids:
                  type: array
                  items:
                    type: string
      responses:
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - bearerAuth: []
  /data/{id}:
    get:
      summary: Post location history
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      responses:
        200:
          description: Contents of this data event
          content:
              application/json:
                 schema:
                  type: object
                  properties:
                    points:
                      type: array
                      items:
                        $ref: '#/components/schemas/point'
                    bluetooth_ids:
                      type: array
                      items:
                        type: string
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - bearerAuth: []
  /user/code:
    get:
      summary: Request code to be sent to number
      parameters:
        - in: query
          name: phone
          schema:
            type: string
          description: The phone number to send code to
      responses:
        default:
          description: successful operation
          content: {}
  /user/login:
    post:
      summary: Logs user into the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                token:
                  type: string
      responses:
        200:
          description: successful operation
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        400:
          description: Invalid token supplied
          content: {}
  /user/exposures:
    get:
      summary: Get ids of all exposures of authorized user
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  ids:
                    type: array
                    items:
                      type: string
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - bearerAuth: []
  /user/testResults:
    post:
      summary: Log test results for this user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  type: string
      responses:
        200:
          description: successful operation
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - bearerAuth: []
  /user/roughLocation:
    post:
      summary: Post rough check in location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/point'
      responses:
        401:
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - bearerAuth: []
components:
  schemas:
    point:
      type: object
      properties:
        lat:
          type: number
          format: float
        lng:
          type: number
          format: float
        time:
          type: integer
          format: int64
  # Client must send requests with the following header set:
  # Authorization: Bearer <token>
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
